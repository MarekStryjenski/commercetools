{
    "info": {
        "_postman_id": "f367b534-c9ea-e7c5-1f46-7a27dc6a30ba",
        "name": "Commercetools Import API",
        "description": "# commercetools API Postman collection\n\nThis Postman collection contains examples of requests and responses for most endpoints and commands of the\nCommercetools Import API. For every command the smallest possible payload is given. Please find optional\nfields in the related official documentation. Additionally the collection provides example requests and\nresponses for specific tasks and more complex data models.\n\n## Disclaimer\n\nThis is not the official Commercetools Import API documentation. Please see [here](http:\/\/docs.commercetools.com\/)\nfor a complete and approved documentation of the Commercetools Import API.\n\n## How to use\n\n**:warning: Be aware that postman automatically synchronizes environment variables (including your API client credentials) to your workspace if logged in.\nUse this collection only for development purposes and non-production projects.**\n\nTo use this collection in Postman please perform the following steps:\n\n1. Download and install the Postman Client\n2. Import the [collection.json](https:\/\/github.com\/commercetools\/commercetools-postman-api-examples\/raw\/master\/collection.json) and [template.json](https:\/\/github.com\/commercetools\/commercetools-postman-api-examples\/raw\/master\/template.json) in your postman application\n3. In the Merchant Center, create a new API Client and fill in the client credentials in your environment\n4. Obtain an access token by sending the \"Authorization\/Obtain access token\" request at the bottom of the request list. Now you can use all other endpoints\n\nFeel free to clone and modify this collection to your needs.\n\nTo automate frequent tasks the collection automatically manages commonly required values and parameters such\nas resource ids, keys and versions in Postman environment variables for you.\n\nPlease see http:\/\/docs.commercetools.com\/ for further information about the commercetools Plattform.",
        "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
    },
    "auth":
        {
            "type": "oauth2",
            "oauth2": {
                "accessToken": "{{ctp_access_token}}",
                "addTokenTo": "header",
                "tokenType": "Bearer"
            }
        },
    "item": [
        {
            "name": "Authorization",
            "description": "Authorization",
            "item": [
                {
                    "name": "Obtain access token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "var data = JSON.parse(responseBody);",
                                    "if(data.access_token){",
                                    "    pm.environment.set(\"ctp_access_token\", data.access_token);",
                                    "}",
                                    "if (data.scope) {",
                                    "    parts = data.scope.split(\" \");",
                                    "    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
                                    "    if (parts.length > 0) {",
                                    "        scopeParts = parts[0];",
                                    "        pm.environment.set(\"project-key\", scopeParts[1]);",
                                    "        parts = parts.filter(scope => scope.length >= 3)",
                                    "        if (parts.length > 0) {",
                                    "            scopeParts = parts[0];",
                                    "            pm.environment.set(\"store-key\", scopeParts[2]);",
                                    "        }",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "basic",
                            "basic": {
                                "username": "{{client_id}}",
                                "password": "{{client_secret}}"
                            }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": ""
                        },
                        "url": {
                            "raw": "{{auth_url}}/oauth/token?grant_type=client_credentials",
                            "host": [
                                "{{auth_url}}"
                            ],
                            "path": [
                                "oauth",
                                "token"
                            ],
                            "query": [
                                {
                                    "key": "grant_type",
                                    "value": "client_credentials",
                                    "equals": true
                                }
                            ]
                        },
                        "description": "Use this request to obtain an access token for your commercetools platform project via Client Credentials Flow. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id and client_secret to use this."
                    },
                    "response": []
                },
                {
                    "name": "Obtain access token through password flow",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "var data = JSON.parse(responseBody);",
                                    "if(data.access_token){",
                                    "    pm.environment.set(\"ctp_access_token\", data.access_token);",
                                    "}",
                                    "if (data.scope) {",
                                    "    parts = data.scope.split(\" \");",
                                    "    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
                                    "    if (parts.length > 0) {",
                                    "        scopeParts = parts[0];",
                                    "        pm.environment.set(\"project-key\", scopeParts[1]);",
                                    "        parts = parts.filter(scope => scope.length >= 3)",
                                    "        if (parts.length > 0) {",
                                    "            scopeParts = parts[0];",
                                    "            pm.environment.set(\"store-key\", scopeParts[2]);",
                                    "        }",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "basic",
                            "basic": {
                                "username": "{{client_id}}",
                                "password": "{{client_secret}}"
                            }
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "",
                                "value": "",
                                "disabled": true
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": ""
                        },
                        "url": {
                            "raw": "{{auth_url}}/oauth/{{project-key}}/customers/token?grant_type=password&username={{user_email}}&password={{user_password}}",
                            "host": [
                                "{{auth_url}}"
                            ],
                            "path": [
                                "oauth",
                                "{{project-key}}",
                                "customers",
                                "token"
                            ],
                            "query": [
                                {
                                    "key": "grant_type",
                                    "value": "password",
                                    "equals": true
                                },
                                {
                                    "key": "username",
                                    "value": "",
                                    "equals": true
                                },
                                {
                                    "key": "password",
                                    "value": "",
                                    "equals": true
                                }
                            ]
                        },
                        "description": "Use this request to obtain an access token for your commercetools platform project via Password Flow. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id, client_secret, user_email and user_password to use this."
                    },
                    "response": []
                },
                {
                    "name": "Token for Anonymous Sessions",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;",
                                    "var data = JSON.parse(responseBody);",
                                    "if(data.access_token){",
                                    "    pm.environment.set(\"ctp_access_token\", data.access_token);",
                                    "}",
                                    "if (data.scope) {",
                                    "    parts = data.scope.split(\" \");",
                                    "    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
                                    "    if (parts.length > 0) {",
                                    "        scopeParts = parts[0];",
                                    "        pm.environment.set(\"project-key\", scopeParts[1]);",
                                    "        parts = parts.filter(scope => scope.length >= 3)",
                                    "        if (parts.length > 0) {",
                                    "            scopeParts = parts[0];",
                                    "            pm.environment.set(\"store-key\", scopeParts[2]);",
                                    "        }",
                                    "    }",
                                    "}"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "basic",
                            "basic": {
                                "username": "{{client_id}}",
                                "password": "{{client_secret}}"
                            }
                        },
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": ""
                        },
                        "url": {
                            "raw": "{{auth_url}}/oauth/{{project-key}}/anonymous/token?grant_type=client_credentials",
                            "host": [
                                "{{auth_url}}"
                            ],
                            "path": [
                                "oauth",
                                "{{project-key}}",
                                "anonymous",
                                "token"
                            ],
                            "query": [
                                {
                                    "key": "grant_type",
                                    "value": "client_credentials",
                                    "equals": true
                                }
                            ]
                        },
                        "description": "Use this request to obtain an access token for a anonymous session. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id and client_secret to use this."
                    },
                    "response": []
                },
                {
                    "name": "Token Introspection",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "type": "text/javascript",
                                "exec": [
                                    "tests[\"Status code is 200\"] = responseCode.code === 200;"
                                ]
                            }
                        }
                    ],
                    "request": {
                        "auth": {
                            "type": "basic",
                            "basic": {
                                "username": "{{client_id}}",
                                "password": "{{client_secret}}"
                            }
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": ""
                        },
                        "url": {
                            "raw": "{{auth_url}}/oauth/introspect?token={{ctp_access_token}}",
                            "host": [
                                "{{auth_url}}"
                            ],
                            "path": [
                                "oauth",
                                "introspect"
                            ],
                            "query": [
                                {
                                    "key": "token",
                                    "value": "{{ctp_access_token}}",
                                    "equals": true
                                }
                            ]
                        },
                        "description": "Token introspection allows to determine the active state of an OAuth 2.0 access token and to determine meta-information about this accces token, such as the `scope`."
                    },
                    "response": []
                }
            ]
        },
        {
            "name": "Project",
            "description": "null",
            "item": [
                {
                    "name": "Import-sinks",
                    "description": "null",
                    "item": [
                        {
                            "name": "Update import-sink",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"import-sink-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"import-sink-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"import-sink-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"import-sink-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"import-sink-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"import-sink-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "put",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/import-sinks/{{import-sink-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "import-sinks",
                                        "{{import-sink-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Updates the import sink given by the key.",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"key\" : \"product-import-sink\",\n  \"version\" : 1,\n  \"resourceType\" : \"product\"\n}"
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Get import-sink",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"import-sink-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"import-sink-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"import-sink-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"import-sink-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"import-sink-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"import-sink-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "get",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/import-sinks/{{import-sink-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "import-sinks",
                                        "{{import-sink-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Retrieves the import sink given by the key.",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Delete import-sink",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"import-sink-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"import-sink-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"import-sink-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"import-sink-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"import-sink-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"import-sink-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "delete",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/import-sinks/{{import-sink-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "import-sinks",
                                        "{{import-sink-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Deletes the import sink given by the key.",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Creates a new import sink.",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"import-sink-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"import-sink-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"import-sink-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"import-sink-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"import-sink-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"import-sink-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/import-sinks",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "import-sinks"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Creates a new import sink.",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"key\" : \"product-import-sink\",\n  \"version\" : 1,\n  \"resourceType\" : \"product\"\n}"
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Query import-sinks",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"import-sink-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"import-sink-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"import-sink-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"import-sink-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"import-sink-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"import-sink-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "get",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/import-sinks",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "import-sinks"
                                    ],
                                    "query": [
                                        {
                                            "key": "limit",
                                            "value": "",
                                            "equals": true,
                                            "disabled": false
                                        },
                                        {
                                            "key": "offset",
                                            "value": "",
                                            "equals": true,
                                            "disabled": false
                                        }
                                    ]
                                },
                                "description": "Retrieves all import sinks of a project key.",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        }
                    ]
                },
                {
                    "name": "Import-summaries",
                    "description": "null",
                    "item": [
                        {
                            "name": "Query import-summaries",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"import-summary-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"import-summary-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"import-summary-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"import-summary-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"import-summary-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"import-summary-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "get",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/import-summaries/importSinkKey={{import-sink-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "import-summaries",
                                        "importSinkKey={{import-sink-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Retrieves an import summary for the given import sink.\n\nThe import summary is calculated on demand.\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        }
                    ]
                },
                {
                    "name": "Categories",
                    "description": "null",
                    "item": [
                        {
                            "name": "Delete category",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"category-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"category-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"category-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"category-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"category-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"category-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "delete",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/categories/importSinkKey={{import-sink-key}}/resourceKey={{resource-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "categories",
                                        "importSinkKey={{import-sink-key}}",
                                        "resourceKey={{resource-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Deletes the category given by the resource key.",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Import-operations",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Get import-operation",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/categories/importSinkKey={{import-sink-key}}/import-operations/{{id}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "categories",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations",
                                                "{{id}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Retrieves the import operation with the given id.\n",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "Query import-operations",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/categories/importSinkKey={{import-sink-key}}/import-operations",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "categories",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "sort",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "resourceKey",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "state",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                }
                                            ]
                                        },
                                        "description": "Retrieves all category import operations of an import sink key.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "Import category",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"category-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"category-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"category-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"category-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"category-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"category-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/categories/importSinkKey={{import-sink-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "categories",
                                        "importSinkKey={{import-sink-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Creates import request for creating new categories or updating existing ones.",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"type\" : \"category\",\n  \"resources\" : [ {\n    \"key\" : \"greatTestCat\",\n    \"name\" : {\n      \"en\" : \"greatTestCat\"\n    },\n    \"slug\" : {\n      \"en\" : \"great-slug\"\n    }\n  } ]\n}"
                                }
                            },
                            "response": []
                        }
                    ]
                },
                {
                    "name": "Prices",
                    "description": "null",
                    "item": [
                        {
                            "name": "Delete price",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"price-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"price-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"price-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"price-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"price-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"price-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "delete",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/prices/importSinkKey={{import-sink-key}}/resourceKey={{resource-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "prices",
                                        "importSinkKey={{import-sink-key}}",
                                        "resourceKey={{resource-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Deletes the price given by the resource key.",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Import-operations",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Get import-operation",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/prices/importSinkKey={{import-sink-key}}/import-operations/{{id}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "prices",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations",
                                                "{{id}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Retrieves the import operation with the given id.\n",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "Query import-operations",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/prices/importSinkKey={{import-sink-key}}/import-operations",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "prices",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "sort",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "resourceKey",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "state",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                }
                                            ]
                                        },
                                        "description": "Retrieves all price import operations of an import sink key.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "Import price",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"price-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"price-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"price-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"price-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"price-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"price-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/prices/importSinkKey={{import-sink-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "prices",
                                        "importSinkKey={{import-sink-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Creates import request for creating new prices or updating existing ones.",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"type\" : \"price\",\n  \"resources\" : [ {\n    \"key\" : \"bigPriceKeyTestCat\",\n    \"productVariant\" : {\n      \"typeId\" : \"product-variant\",\n      \"key\" : \"red-t-shirt\"\n    },\n    \"product\" : {\n      \"typeId\" : \"product\",\n      \"key\" : \"t-shirt\"\n    },\n    \"value\" : {\n      \"type\" : \"centPrecision\",\n      \"currencyCode\" : \"EUR\",\n      \"centAmount\" : 300\n    }\n  } ]\n}"
                                }
                            },
                            "response": []
                        }
                    ]
                },
                {
                    "name": "Products",
                    "description": "null",
                    "item": [
                        {
                            "name": "Delete product",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"product-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"product-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"product-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"product-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"product-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"product-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "delete",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/products/importSinkKey={{import-sink-key}}/resourceKey={{resource-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "products",
                                        "importSinkKey={{import-sink-key}}",
                                        "resourceKey={{resource-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Deletes the product given by the resource key.\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Import-operations",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Get import-operation",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/products/importSinkKey={{import-sink-key}}/import-operations/{{id}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "products",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations",
                                                "{{id}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Retrieves the import operation with the given id.\n",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "Query import-operations",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/products/importSinkKey={{import-sink-key}}/import-operations",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "products",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "sort",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "resourceKey",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "state",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                }
                                            ]
                                        },
                                        "description": "Retrieves all product import operations of an import sink key.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "Import product",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"product-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"product-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"product-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"product-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"product-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"product-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/products/importSinkKey={{import-sink-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "products",
                                        "importSinkKey={{import-sink-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Creates import request for creating new products or updating existing ones.",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"type\" : \"product\",\n  \"resources\" : [ {\n    \"key\" : \"t-shirt\",\n    \"name\" : {\n      \"en\" : \"t-shirt\"\n    },\n    \"productType\" : {\n      \"typeId\" : \"product-type\",\n      \"key\" : \"sample\"\n    },\n    \"slug\" : {\n      \"en\" : \"t-shirt-slug\"\n    },\n    \"metaTitle\" : {\n      \"en\" : \"title\"\n    },\n    \"metaDescription\" : {\n      \"en\" : \"description\"\n    },\n    \"metaKeywords\" : {\n      \"en\" : \"Keywords\"\n    }\n  } ]\n}"
                                }
                            },
                            "response": []
                        }
                    ]
                },
                {
                    "name": "Product-drafts",
                    "description": "null",
                    "item": [
                        {
                            "name": "Delete product-draft",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"product-draft-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"product-draft-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"product-draft-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"product-draft-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"product-draft-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"product-draft-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "delete",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/product-drafts/importSinkKey={{import-sink-key}}/resourceKey={{resource-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "product-drafts",
                                        "importSinkKey={{import-sink-key}}",
                                        "resourceKey={{resource-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Deletes the product type given by the resource key.",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Import-operations",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Get import-operation",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/product-drafts/importSinkKey={{import-sink-key}}/import-operations/{{id}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "product-drafts",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations",
                                                "{{id}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Retrieves the import operation with the given id.\n",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "Query import-operations",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/product-drafts/importSinkKey={{import-sink-key}}/import-operations",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "product-drafts",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "sort",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "resourceKey",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "state",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                }
                                            ]
                                        },
                                        "description": "Retrieves all import operations of an import sink key.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "Import product-draft",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"product-draft-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"product-draft-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"product-draft-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"product-draft-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"product-draft-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"product-draft-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/product-drafts/importSinkKey={{import-sink-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "product-drafts",
                                        "importSinkKey={{import-sink-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Creates import request for creating new product drafts or updating existing ones.\n",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"type\" : \"product-draft\",\n  \"resources\" : [ {\n    \"key\" : \"product-draft-key\",\n    \"name\" : {\n      \"en\" : \"blue shirt\"\n    },\n    \"slug\" : {\n      \"en\" : \"blue-t-shirt\"\n    },\n    \"productType\" : {\n      \"typeId\" : \"product-type\",\n      \"key\" : \"sample\"\n    },\n    \"masterVariant\" : {\n      \"attributes\" : [ {\n        \"type\" : \"reference\",\n        \"name\" : \"product-ref-attribute\",\n        \"value\" : {\n          \"key\" : \"greatTestCat\",\n          \"typeId\" : \"category\"\n        }\n      } ]\n    }\n  } ]\n}"
                                }
                            },
                            "response": []
                        }
                    ]
                },
                {
                    "name": "Product-types",
                    "description": "null",
                    "item": [
                        {
                            "name": "Delete product-type",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"product-type-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"product-type-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"product-type-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"product-type-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"product-type-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"product-type-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "delete",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/product-types/importSinkKey={{import-sink-key}}/resourceKey={{resource-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "product-types",
                                        "importSinkKey={{import-sink-key}}",
                                        "resourceKey={{resource-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Deletes the product type given by the resource key.",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Import-operations",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Get import-operation",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/product-types/importSinkKey={{import-sink-key}}/import-operations/{{id}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "product-types",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations",
                                                "{{id}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Retrieves the import operation with the given id.\n",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "Query import-operations",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/product-types/importSinkKey={{import-sink-key}}/import-operations",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "product-types",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "sort",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "resourceKey",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "state",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                }
                                            ]
                                        },
                                        "description": "Retrieves all import operations of an import sink key.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "Import product-type",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"product-type-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"product-type-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"product-type-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"product-type-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"product-type-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"product-type-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/product-types/importSinkKey={{import-sink-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "product-types",
                                        "importSinkKey={{import-sink-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Creates import request for creating new product types or updating existing ones.",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"type\" : \"product-type\",\n  \"resources\" : [ {\n    \"key\" : \"sample\",\n    \"name\" : \"test_product_type\",\n    \"description\" : \"Test product type.\",\n    \"attributes\" : [ {\n      \"name\" : \"product-ref-attribute\",\n      \"label\" : {\n        \"en\" : \"selling product\"\n      },\n      \"isRequired\" : false,\n      \"isSearchable\" : false,\n      \"type\" : {\n        \"name\" : \"reference\",\n        \"referenceTypeId\" : \"category\"\n      }\n    } ]\n  } ]\n}"
                                }
                            },
                            "response": []
                        }
                    ]
                },
                {
                    "name": "Product-variants",
                    "description": "null",
                    "item": [
                        {
                            "name": "Delete product-variant",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"product-variant-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"product-variant-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"product-variant-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"product-variant-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"product-variant-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"product-variant-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "delete",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/product-variants/importSinkKey={{import-sink-key}}/resourceKey={{resource-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "product-variants",
                                        "importSinkKey={{import-sink-key}}",
                                        "resourceKey={{resource-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Deletes the product variant given by the resource key.",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Import-operations",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Get import-operation",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/product-variants/importSinkKey={{import-sink-key}}/import-operations/{{id}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "product-variants",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations",
                                                "{{id}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Retrieves the import operation with the given id.\n",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "Query import-operations",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/product-variants/importSinkKey={{import-sink-key}}/import-operations",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "product-variants",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "sort",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "resourceKey",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "state",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                }
                                            ]
                                        },
                                        "description": "Retrieves all product-variant import operations of an import sink key.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "Import product-variant",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"product-variant-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"product-variant-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"product-variant-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"product-variant-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"product-variant-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"product-variant-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/product-variants/importSinkKey={{import-sink-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "product-variants",
                                        "importSinkKey={{import-sink-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Creates import request for creating new product variants or updating existing ones.",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"type\" : \"product-variant\",\n  \"resources\" : [ {\n    \"key\" : \"red-t-shirt\",\n    \"sku\" : \"red-t-shirt\",\n    \"product\" : {\n      \"key\" : \"t-shirt\",\n      \"typeId\" : \"product\"\n    },\n    \"isMasterVariant\" : true,\n    \"attributes\" : [ {\n      \"name\" : \"new\",\n      \"type\" : \"boolean\",\n      \"value\" : true\n    }, {\n      \"name\" : \"weight\",\n      \"type\" : \"number\",\n      \"value\" : 12.5\n    } ],\n    \"assets\" : [ {\n      \"id\" : \"uuid-kafar7545792sd6r\",\n      \"key\" : \"uuid-kafar7545792sd6r\",\n      \"sources\" : [ {\n        \"uri\" : \"http:\/\/www.example.com\"\n      } ],\n      \"name\" : {\n        \"en\" : \"asset name\"\n      }\n    } ],\n    \"images\" : [ {\n      \"url\" : \"https:\/\/www.commercetools.com\/cli\/data\/253234387_1.jpg\",\n      \"dimensions\" : {\n        \"w\" : 1400,\n        \"h\" : 1400\n      },\n      \"label\" : \"tank top image Font\"\n    } ]\n  } ]\n}"
                                }
                            },
                            "response": []
                        }
                    ]
                },
                {
                    "name": "Product-variant-patches",
                    "description": "null",
                    "item": [
                        {
                            "name": "Import-operations",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Get import-operation",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/product-variant-patches/importSinkKey={{import-sink-key}}/import-operations/{{id}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "product-variant-patches",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations",
                                                "{{id}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Retrieves the import operation with the given id.\n",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "Query import-operations",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/product-variant-patches/importSinkKey={{import-sink-key}}/import-operations",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "product-variant-patches",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "sort",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "resourceKey",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "state",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                }
                                            ]
                                        },
                                        "description": "Retrieves all product-variant-patches import operations of an import sink key.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "Import product-variant-patch",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"product-variant-patch-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"product-variant-patch-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"product-variant-patch-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"product-variant-patch-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"product-variant-patch-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"product-variant-patch-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/product-variant-patches/importSinkKey={{import-sink-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "product-variant-patches",
                                        "importSinkKey={{import-sink-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Creates a new import request for product variant patches",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"type\" : \"product-variant-patch\",\n  \"patches\" : [ {\n    \"productVariant\" : {\n      \"typeId\" : \"product-variant\",\n      \"key\" : \"red-t-shirt\"\n    },\n    \"attributes\" : {\n      \"attribute-to-update\" : {\n        \"type\" : \"boolean\",\n        \"value\" : true\n      },\n      \"attribute-to-delete\" : \"null\"\n    }\n  } ]\n}"
                                }
                            },
                            "response": []
                        }
                    ]
                },
                {
                    "name": "Orders",
                    "description": "null",
                    "item": [
                        {
                            "name": "Import-operations",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Get import-operation",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/orders/importSinkKey={{import-sink-key}}/import-operations/{{id}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "orders",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations",
                                                "{{id}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Retrieves the import operation with the given id.\n",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "Query import-operations",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/orders/importSinkKey={{import-sink-key}}/import-operations",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "orders",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "sort",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "resourceKey",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "state",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                }
                                            ]
                                        },
                                        "description": "Retrieves all order import operations of an import sink key.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "Import order",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"order-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"order-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"order-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"order-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"order-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"order-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/orders/importSinkKey={{import-sink-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "orders",
                                        "importSinkKey={{import-sink-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Creates import request for creating new orders or updating existing ones.",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"type\" : \"order\",\n  \"resources\" : [ {\n    \"key\" : \"test-order-number\",\n    \"lineItems\" : [ {\n      \"name\" : {\n        \"en\" : \"abc\"\n      },\n      \"quantity\" : 10,\n      \"price\" : {\n        \"value\" : {\n          \"type\" : \"centPrecision\",\n          \"centAmount\" : 100,\n          \"currencyCode\" : \"EUR\"\n        }\n      },\n      \"supplyChannel\" : {\n        \"typeId\" : \"channel\",\n        \"key\" : \"supplier-channel-key\"\n      },\n      \"variant\" : {\n        \"key\" : \"product-variant-key\",\n        \"typeId\" : \"product-variant\"\n      }\n    } ],\n    \"customLineItems\" : [ {\n      \"name\" : {\n        \"en\" : \"name\"\n      },\n      \"totalPrice\" : {\n        \"type\" : \"centPrecision\",\n        \"centAmount\" : 123,\n        \"currencyCode\" : \"EUR\"\n      },\n      \"state\" : [ {\n        \"quantity\" : 10,\n        \"state\" : {\n          \"key\" : \"state-key\",\n          \"typeId\" : \"state\"\n        }\n      } ],\n      \"money\" : {\n        \"type\" : \"centPrecision\",\n        \"centAmount\" : 123,\n        \"currencyCode\" : \"EUR\"\n      },\n      \"quantity\" : 10,\n      \"slug\" : \"my-slug\",\n      \"taxCategory\" : {\n        \"typeId\" : \"tax-category\",\n        \"key\" : \"tax-category-key\"\n      },\n      \"discountedPricePerQuantity\" : [ {\n        \"value\" : {\n          \"type\" : \"centPrecision\",\n          \"centAmount\" : 123,\n          \"currencyCode\" : \"EUR\"\n        },\n        \"includedDiscounts\" : [ {\n          \"discountedAmount\" : {\n            \"type\" : \"centPrecision\",\n            \"centAmount\" : 123,\n            \"currencyCode\" : \"EUR\"\n          },\n          \"discount\" : {\n            \"typeId\" : \"cart-discount\",\n            \"key\" : \"cart-discount-key\"\n          }\n        } ]\n      } ]\n    } ],\n    \"customerGroup\" : {\n      \"typeId\" : \"customer-group\",\n      \"key\" : \"customer-group-key\"\n    },\n    \"customerEmail\" : \"customer-email@example.com\",\n    \"customer\" : {\n      \"typeId\" : \"customer\",\n      \"key\" : \"myKey\"\n    },\n    \"orderNumber\" : \"test-order-number\",\n    \"totalPrice\" : {\n      \"type\" : \"centPrecision\",\n      \"currencyCode\" : \"EUR\",\n      \"centAmount\" : 4200\n    }\n  } ]\n}"
                                }
                            },
                            "response": []
                        }
                    ]
                },
                {
                    "name": "Customers",
                    "description": "null",
                    "item": [
                        {
                            "name": "Delete customer",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"customer-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"customer-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"customer-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"customer-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"customer-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"customer-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "delete",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/customers/importSinkKey={{import-sink-key}}/resourceKey={{resource-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "customers",
                                        "importSinkKey={{import-sink-key}}",
                                        "resourceKey={{resource-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Deletes the customer given by the resource key.",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Import-operations",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Get import-operation",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/customers/importSinkKey={{import-sink-key}}/import-operations/{{id}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "customers",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations",
                                                "{{id}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Retrieves the import operation with the given id.\n",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "Query import-operations",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/customers/importSinkKey={{import-sink-key}}/import-operations",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "customers",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "sort",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "resourceKey",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "state",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                }
                                            ]
                                        },
                                        "description": "Retrieves all customer import operations of an import sink key.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "Import customer",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"customer-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"customer-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"customer-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"customer-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"customer-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"customer-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/customers/importSinkKey={{import-sink-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "customers",
                                        "importSinkKey={{import-sink-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Creates import request for creating new customers or updating existing ones.",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"type\" : \"customer\",\n  \"resources\" : [ {\n    \"key\" : \"keycustomertest\",\n    \"firstName\" : \"Alice\",\n    \"lastName\" : \"Doe\",\n    \"email\" : \"alice@example.org\",\n    \"password\" : \"secret\"\n  } ]\n}"
                                }
                            },
                            "response": []
                        }
                    ]
                },
                {
                    "name": "Inventories",
                    "description": "null",
                    "item": [
                        {
                            "name": "Delete inventory",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"inventory-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"inventory-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"inventory-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"inventory-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"inventory-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"inventory-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "delete",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/inventories/importSinkKey={{import-sink-key}}/resourceKey={{resource-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "inventories",
                                        "importSinkKey={{import-sink-key}}",
                                        "resourceKey={{resource-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Deletes the inventory given by the resource key.",
                                "body": {
                                    "mode": "raw",
                                    "raw": ""
                                }
                            },
                            "response": []
                        },
                        {
                            "name": "Import-operations",
                            "description": "null",
                            "item": [
                                {
                                    "name": "Get import-operation",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/inventories/importSinkKey={{import-sink-key}}/import-operations/{{id}}",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "inventories",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations",
                                                "{{id}}"
                                            ],
                                            "query": [
                                            ]
                                        },
                                        "description": "Retrieves the import operation with the given id.\n",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                },
                                {
                                    "name": "Query import-operations",
                                    "event": [
                                        {
                                            "listen": "test",
                                            "script": {
                                                "type": "text/javascript",
                                                "exec": [
                                                    "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                                    "var data = JSON.parse(responseBody);",
                                                    "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                                    "    pm.environment.set(\"import-operation-id\", data.results[0].id); ",
                                                    "    pm.environment.set(\"import-operation-version\", data.results[0].version);",
                                                    "}",
                                                    "if(data.results && data.results[0] && data.results[0].key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.results[0].key); ",
                                                    "}",
                                                    "if(data.version){",
                                                    "    pm.environment.set(\"import-operation-version\", data.version);",
                                                    "}",
                                                    "if(data.id){",
                                                    "    pm.environment.set(\"import-operation-id\", data.id); ",
                                                    "}",
                                                    "if(data.key){",
                                                    "    pm.environment.set(\"import-operation-key\", data.key);",
                                                    "}",
                                                    ""
                                                ]
                                            }
                                        }
                                    ],
                                    "request": {
                                        "auth":
                                            {
                                                "type": "oauth2",
                                                "oauth2": {
                                                    "accessToken": "{{ctp_access_token}}",
                                                    "addTokenTo": "header",
                                                    "tokenType": "Bearer"
                                                }
                                            },
                                        "method": "get",
                                        "header": [
                                            {
                                                "key": "Content-Type",
                                                "value": "application/json"
                                            }
                                        ],
                                        "url": {
                                            "raw": "{{host}}/{{project-key}}/inventories/importSinkKey={{import-sink-key}}/import-operations",
                                            "host": [
                                                "{{host}}"
                                            ],
                                            "path": [
                                                "{{project-key}}",
                                                "inventories",
                                                "importSinkKey={{import-sink-key}}",
                                                "import-operations"
                                            ],
                                            "query": [
                                                {
                                                    "key": "limit",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "offset",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "sort",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "resourceKey",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                },
                                                {
                                                    "key": "state",
                                                    "value": "",
                                                    "equals": true,
                                                    "disabled": true
                                                }
                                            ]
                                        },
                                        "description": "Retrieves all inventory import operations of an import sink key.",
                                        "body": {
                                            "mode": "raw",
                                            "raw": ""
                                        }
                                    },
                                    "response": []
                                }
                            ]
                        },
                        {
                            "name": "Import inventory",
                            "event": [
                                {
                                    "listen": "test",
                                    "script": {
                                        "type": "text/javascript",
                                        "exec": [
                                            "tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
                                            "var data = JSON.parse(responseBody);",
                                            "if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
                                            "    pm.environment.set(\"inventory-id\", data.results[0].id); ",
                                            "    pm.environment.set(\"inventory-version\", data.results[0].version);",
                                            "}",
                                            "if(data.results && data.results[0] && data.results[0].key){",
                                            "    pm.environment.set(\"inventory-key\", data.results[0].key); ",
                                            "}",
                                            "if(data.version){",
                                            "    pm.environment.set(\"inventory-version\", data.version);",
                                            "}",
                                            "if(data.id){",
                                            "    pm.environment.set(\"inventory-id\", data.id); ",
                                            "}",
                                            "if(data.key){",
                                            "    pm.environment.set(\"inventory-key\", data.key);",
                                            "}",
                                            ""
                                        ]
                                    }
                                }
                            ],
                            "request": {
                                "auth":
                                    {
                                        "type": "oauth2",
                                        "oauth2": {
                                            "accessToken": "{{ctp_access_token}}",
                                            "addTokenTo": "header",
                                            "tokenType": "Bearer"
                                        }
                                    },
                                "method": "post",
                                "header": [
                                    {
                                        "key": "Content-Type",
                                        "value": "application/json"
                                    }
                                ],
                                "url": {
                                    "raw": "{{host}}/{{project-key}}/inventories/importSinkKey={{import-sink-key}}",
                                    "host": [
                                        "{{host}}"
                                    ],
                                    "path": [
                                        "{{project-key}}",
                                        "inventories",
                                        "importSinkKey={{import-sink-key}}"
                                    ],
                                    "query": [
                                    ]
                                },
                                "description": "Creates import request for creating new inventories or updating existing ones.",
                                "body": {
                                    "mode": "raw",
                                    "raw": "{\n  \"type\" : \"inventory\",\n  \"resources\" : [ {\n    \"key\" : \"inventory-key\",\n    \"sku\" : \"inventory-sku\",\n    \"quantityOnStock\" : 15,\n    \"restockableInDays\" : 2\n  } ]\n}"
                                }
                            },
                            "response": []
                        }
                    ]
                }
            ]
        }
    ]
}
